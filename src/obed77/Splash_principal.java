/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package obed77;

import BaseDeDatos.ConexionBD;
import com.sun.awt.AWTUtilities;
import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Image;
import java.awt.Shape;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.RoundRectangle2D;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

/**
 *
 * @author Saito
 */
public class Splash_principal extends javax.swing.JFrame implements Runnable {
    private Timer timer;
    int i=0;
    Shape shape = null;
    Validación p ;
    public Splash_principal() {
        initComponents();
        shape = new RoundRectangle2D.Float(0,0,this.getWidth(),this.getHeight(),20,20);
        AWTUtilities.setWindowShape(this, shape);
    }
public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("Imagenes/LogoObed77.png"));


        return retValue;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Configurar = new javax.swing.JButton();
        lab_texto = new javax.swing.JLabel();
        btn_cerrar = new javax.swing.JButton();
        progreso = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("¡Cargando Obed77!");
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(690, 260));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Configurar.setText("Configuración");
        Configurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfigurarActionPerformed(evt);
            }
        });
        getContentPane().add(Configurar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, 120, -1));
        getContentPane().add(lab_texto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 230, 30));

        btn_cerrar.setText("Cerrar");
        btn_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_cerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 230, 100, -1));

        progreso.setBackground(new java.awt.Color(255, 255, 255));
        progreso.setForeground(new java.awt.Color(0, 204, 51));
        progreso.setBorderPainted(false);
        progreso.setFocusable(false);
        getContentPane().add(progreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 690, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SplashPrincipalO77.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 260));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ConfigurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfigurarActionPerformed
    Ventana_Ajustes_Splash va = new Ventana_Ajustes_Splash();
    va.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_ConfigurarActionPerformed

    private void btn_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrarActionPerformed
       
        System.exit(0);   // TODO add your handling code here:
    }//GEN-LAST:event_btn_cerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Splash_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Splash_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Splash_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Splash_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Splash_principal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton Configurar;
    public javax.swing.JButton btn_cerrar;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel lab_texto;
    public javax.swing.JProgressBar progreso;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() 
    {
       Configurar.setVisible(false);
       btn_cerrar.setVisible(false);
       this.setLocationRelativeTo(null);
       this.setVisible(true);
        timer = new Timer(40,new ActionListener()
        {
            public void actionPerformed(ActionEvent o)
            {
                i+=1;
                progreso.setValue(i);
                if(i==10)
                {
                 lab_texto.setText("Cargando Aplicación...");
                 
                }
                if(i==30)
                {
                    lab_texto.setText("Conectando a la Base de Datos...");
                    try{
                        
                     ConexionBD parametros = new ConexionBD();
                     Class.forName(parametros.getDriver());
                     Connection con = DriverManager.getConnection(parametros.getUrl(), parametros.getUser(), parametros.getPass());
                     lab_texto.setText("Conectado con la Base de Datos...");
                         
                     
                    
                    }catch(SQLException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        lab_texto.setText("Error al conectar con la Base de Datos...");
                        timer.stop();
                        progreso.setValue(100);
                        progreso.setForeground(Color.red);
                        Configurar.setVisible(true);
                        btn_cerrar.setVisible(true);
                    } catch (ClassNotFoundException ex) {
                          Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                          lab_texto.setText("Error al conectar con la Base de Datos...");
                          timer.stop();
                          Configurar.setVisible(true);
                          btn_cerrar.setVisible(true);
                          
                    }
                }
                if(i==80)
                {
                    lab_texto.setText("Ejecutando Aplicación...");
                   
                }
                if(i==100)
                {
                    p = new Validación();
                }
                cek();
            }
        });
        timer.start();
    }
    private void cek()
    {
        if(i==100)
        {
            timer.stop();  
            this.dispose();
            
            p.setVisible(true);
        }

    }
}
